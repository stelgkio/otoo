package views

import "fmt"

css loading(percent int64) {
	width: { fmt.Sprintf("%d%%", percent) };
}


templ ProductProgress(retrivedProducts, totalProducts int64) {
    
    <div id="dashboard-content"
     class="flex-fill overflow-y-lg-auto scrollbar bg-body rounded-top-4 rounded-top-start-lg-4 rounded-top-end-lg-0 border-top border-lg shadow-2">
     <main class="container-fluid px-3 py-5 p-lg-6 p-xxl-8">

         <header class="py-4 border-bottom">
             <div class="row align-items-center">
                 <div class="col">
                     <div class="d-flex align-items-center gap-4">
                        //  if hasError {
                        //  <div>
                        //      <button type="button" class="btn-close text-xs" aria-label="Close" 
                        //      hx-get={ fmt.Sprintf("project/%s",projectId) } 
                        //      hx-target="#dashboard-content">
                        //      </button>
                        //  </div>
                        //  }

                         <h1 class="h4 ls-tight">Get Products</h1>
                     </div>
                 </div>
             </div>
         </header>
         <div class="card">
             <div class="card-body py-4">
                 <div class="d-flex flex-wrap align-items-center justify-content-between mb-5">
                     <div class="flex-1">
                         <h6 class="h5 text-limit fw-semibold mb-1">Standard Plan</h6>
                         <p class="text-sm text-muted d-none d-sm-block">The perfect way to get started.</p>
                     </div>
                    
                 </div>
                 <div class="d-flex align-items-center justify-content-between mb-1"><span
                         class="text-sm text-muted fw-semibold text-heading d-block"> { toString(totalProducts) }</span> <span
                         class="text-sm text-muted fw-semibold d-block"> { retrivedProductsCount(retrivedProducts,totalProducts) } </span>
                 </div>
                 <div class="progress progress-sm shadow-none mb-6">
                     <div class="progress-bar bg-primary" role="progressbar" class={ loading(retrivedProductsPercentageInt(retrivedProducts,totalProducts)) } aria-valuemin="0"
                         aria-valuemax="100"></div>

                 </div>

             </div>
         </div>
         <form autocomplete="off">
             <hr class="my-6" />
             <button type="button" class="btn btn-sm btn-neutral" hx-get="/project/list"
                 hx-target="#dashboard-content">Cancel</button>
             <div class="d-flex justify-content-end gap-2">
                 <button type="submit" hx-post="/project/create" hx-indicator="#spinner" class="btn btn-sm btn-primary"
                     hx-target="#dashboard-content">
                     <span id="spinner" class="htmx-indicator spinner-border spinner-border-sm" role="status"
                         aria-hidden="true"></span>
                     Next
                 </button>
             </div>
         </form>

     </main>
 </div>       
}


func toString(data int64) string {
    return fmt.Sprintf("%d", data)
}
func retrivedProductsPercentage(retrivedProducts, totalProducts int64) string {
    return fmt.Sprintf("%d", retrivedProducts * 100 / totalProducts)
}


func retrivedProductsCount(retrivedProducts, totalProducts int64) string {
    return fmt.Sprintf("%d", totalProducts - retrivedProducts)
}

 func retrivedProductsPercentageInt(retrivedProducts, totalProducts int64) int64 {
    return   retrivedProducts * 100 / totalProducts
}