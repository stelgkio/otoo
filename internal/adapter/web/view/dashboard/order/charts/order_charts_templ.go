// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"

var chartHandle = templ.NewOnceHandle()

func OrderCharts(projectId string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"dashboard-order\"><div class=\"mb-1 mb-xl-10\"><div class=\"col\"><div class=\"hstack gap-2 justify-content-start\"><button class=\"btn btn-sm btn-neutral \" type=\"button\" hx-get=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/order/tablehtml/%s", projectId))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/adapter/web/view/dashboard/order/charts/order_charts.templ`, Line: 15, Col: 60}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-target=\"#dashboard-order\"><i class=\"bi bi-table\"></i> <span class=\"ms-2\">Order Table</span></button></div></div></div><div class=\"row g-3 g-xl-6\"><div class=\"col-xxl-12\"><div class=\"card\"><div class=\"card-body pb-0\"><div class=\"row g-3 justify-content-between align-items-center\"><div class=\"col-12 col-sm\"><h5>Orders chart</h5></div><div class=\"col-12 col-sm-auto\"><div class=\"d-flex scrollable-x justify-content-between gap-1 p-1 align-items-center bg-body-secondary rounded text-xs fw-semibold\"><a href=\"#\" class=\"px-3 py-1 text-muted  bg-white-hover bg-opacity-50-hover rounded\">1W</a> <a href=\"#\" class=\"px-3 py-1 text-muted bg-white-hover bg-opacity-50-hover rounded\">1M</a> <a href=\"#\" class=\"d-none d-sm-inline-block px-3 py-1 text-muted bg-white-hover bg-opacity-50-hover rounded\">1Y</a></div></div></div><div class=\"mx-n4\"><div id=\"chart\" data-height=\"420\"></div></div></div></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script type=\"text/javascript\">\n        // Assuming you have an HTML element with id \"chart\" to render the chart\n        var chartElement = document.getElementById(\"chart\");\n\n        var options = {\n            chart: {\n                zoom: {\n                    enabled: false\n                },\n                toolbar: {\n                    show: false\n                },\n                shadow: {\n                    enabled: false\n                },\n                animations: {\n                    enabled: false\n                },\n                height: 390,\n            },\n            colors: ['#007bff', '#8957ff', '#ffc107', '#dc3545'], // Using the same colors as the original example\n            stroke: {\n                width: 4,\n                curve: \"smooth\"\n            },\n            series: [\n                { name: \"Card\", type: \"line\", data: [30, 50, 70, 90, 80, 70, 90, 120, 100, 120, 140] },\n                { name: \"Cash\", type: \"line\", data: [50, 70, 30, 20, 10, 10, 40, 100, 90, 100, 120] }\n            ],\n            markers: {\n                size: 0\n            },\n            xaxis: {\n                axisBorder: {\n                    show: false\n                },\n                axisTicks: {\n                    show: false\n                },\n                categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n                labels: {\n                    style: {\n                        colors: \"#e3dede\",\n                        fontSize: \"13px\",\n                        fontFamily: \"#333\",\n                        cssClass: \"apexcharts-xaxis-label\"\n                    }\n                }\n            },\n            yaxis: {\n                axisBorder: {\n                    show: false\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: \"#e3dede\",\n                        fontSize: \"13px\",\n                        fontFamily: \"inherit\",\n                        cssClass: \"apexcharts-xaxis-label\"\n                    }\n                }\n            },\n            legend: {\n                show: false\n            },\n            grid: {\n                borderColor: \"#807c7c\",\n                strokeDashArray: 3\n            },\n            dataLabels: {\n                enabled: false\n            },\n            tooltip: {\n                shared: true,\n                intersect: false,\n                y: {\n                    formatter: function (e) {\n                        return e !== undefined ? e.toFixed(0) + \" orders\" : e;\n                    }\n                }\n            }\n        };\n\n        var lineChart = new ApexCharts(chartElement, options);\n        lineChart.render();\n\n\n    </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = chartHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
