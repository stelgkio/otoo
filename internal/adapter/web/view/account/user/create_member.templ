package views

import "fmt"

templ CreateMeember(projectId string, errors map[string](string)) {
	<div id="modals-here" class="modal modal-blur show" tabindex="-1" style="display: block;" aria-modal="true" role="dialog">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content shadow-3">
				<form autocomplete="off" class="needs-validation" novalidate>
					<div class="modal-header justify-content-start">
						<div class="icon icon-shape rounded-3 bg-primary-subtle text-primary text-lg me-4"><i class="bi bi-microsoft-teams"></i></div>
						<div>
							<h5 class="mb-1">Add team member</h5>
							// <small class="d-block text-xs text-muted">This will send email to new user</small>
						</div>
						<!-- Close Button in Header -->
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closeModal()"></button>
					</div>
					<div class="modal-body">
						<div>
							<label class="form-label">Name</label>
							if errors["name"] != "" {
								<input class="form-control is-invalid" name="name" placeholder="Name" required type="text"/>
								<div class="invalid-feedback" style="display: block;">{ errors["name"] }</div>
							} else {
								<input class="form-control" name="name" placeholder="Name" required type="text"/>
							}
						</div>
						<div>
							<label class="form-label">Last Name</label>
							if errors["lastname"] != "" {
								<input class="form-control is-invalid" name="last_name" placeholder="Last Name" required type="text"/>
								<div class="invalid-feedback" style="display: block;">{ errors["lastname"] }</div>
							} else {
								<input class="form-control" name="last_name" placeholder="Last Name" required type="text"/>
							}
						</div>
						<div>
							<label class="form-label">Email </label>
							if errors["email"] != "" {
								<input class="form-control is-invalid" name="email" placeholder="Email address" required type="email"/>
								<div class="invalid-feedback" style="display: block;">{ errors["email"] }</div>
							} else {
								<input class="form-control" name="email" placeholder="Email address" required type="email"/>
							}
						</div>
						<div>
							<label class="form-label">Password</label>
							if errors["password"] != "" {
								<div class="password-container">
									<input type="password" class="form-control is-invalid" name="password" required placeholder="Password" id="password"/>
									<i class="fas fa-eye toggle-password" onclick="togglePassword('password', this)"></i>
								</div>
								<div class="invalid-feedback" style="display: block;">{ errors["password"] }</div>
							} else {
								<div class="password-container">
									<input type="password" class="form-control" name="password" required placeholder="Password" id="password"/>
									<i class="fas fa-eye toggle-password" onclick="togglePassword('password', this)"></i>
								</div>
							}
						</div>
						<div>
							<label class="form-label">Confirmation Password</label>
							if errors["confirmation_password"] != "" {
								<div class="password-container">
									<input type="password" class="form-control is-invalid" name="confirmationpassword" required placeholder="Confirmation Password" id="confirm-password"/>
									<i class="fas fa-eye toggle-password" onclick="togglePassword('confirm-password', this)"></i>
								</div>
								<div class="invalid-feedback" style="display: block;">{ errors["confirmation_password"] }</div>
							} else {
								<div class="password-container">
									<input type="password" class="form-control" name="confirmationpassword" required placeholder="Confirmation Password" id="confirm-password"/>
									<i class="fas fa-eye toggle-password" onclick="togglePassword('confirm-password', this)"></i>
								</div>
							}
						</div>
						<div>
							<div class="form-check form-switch pt-5">
								<label class="form-check-label" for="flexSwitchCheckChecked">Receive Notification</label>
								<input type="hidden" name="receive_notification" value="false"/>
								<input class="form-check-input" type="checkbox" name="receive_notification" value="true" checked/>
							</div>
						</div>
					</div>
					<div class="modal-footer">
						<div class="me-auto"></div>
						<button type="button" class="btn btn-sm btn-neutral" data-bs-dismiss="modal" aria-label="Close" onclick="closeModal()">Close</button>
						<button
							type="submit"
							hx-post={ fmt.Sprintf("/user/addmember/%s", projectId) }
							class="btn btn-sm btn-primary"
							data-bs-dismiss="modal"
							hx-indicator="#spinner"
							hx-target="#modals-here"
							hx-swap="innerHTML"
						>
							<span
								id="spinner"
								class="htmx-indicator spinner-border spinner-border-sm"
								role="status"
								aria-hidden="true"
								hx-boost="validate"
							></span>Add Member
						</button>
					</div>
				</form>
			</div>
		</div>
		<script>
        	// Function to close the modal
function closeModal() {
	console.log("Closing modal...");
   var modalElement = document.getElementById('modals-here');
    var modal = bootstrap.Modal.getInstance(modalElement);

    if (modal) {
        modal.hide();
    } else {
        var newModal = new bootstrap.Modal(modalElement);
        newModal.hide();
    }
}
</script>
	</div>
}
