package views

import (
	"github.com/go-playground/validator/v10"
	h "github.com/stelgkio/otoo/internal/adapter/web/view/component/header"
)

templ Register(BadRequest int, verr validator.ValidationErrors, err error) {
	<!DOCTYPE html>
	<html lang="en" data-theme="light">
		@h.HeaderComponent()
		<body>
			<div class="row g-0 justify-content-center gradient-bottom-right start-purple middle-indigo end-pink">
				<div
					class="col-md-6 col-lg-5 col-xl-5 position-fixed start-0 top-0 vh-100 overflow-y-hidden d-none d-lg-flex flex-lg-column"
				>
					<div class="p-12 py-xl-10 px-xl-20">
						<a class="d-block" href="/index">
							<h1 class="display-9 mylogo text-white fw-bolder lh-tight px-sm-1">
								KonektorX 
							</h1>
						</a>
						<div class="mt-16">
							<h1 class="ls-tight fw-bolder display-6 text-white mb-5">
								All in one Solution, Integration & Dashboard Analytics Faster than Ever.
							</h1>
							// <p class="text-white text-opacity-75 pe-xl-24">
							// 	Create beautiful websites that are supported by
							// 	rock-solid design principles.
							// </p>
						</div>
					</div>
					<div class="mt-auto ps-16 ps-xl-20"></div>
				</div>
				<div class="col-12 col-md-12 col-lg-7 offset-lg-5 min-vh-100 overflow-y-auto d-flex flex-column justify-content-center position-relative bg-body rounded-top-start-lg-4 border-start-lg shadow-soft-5">
					<div class="w-md-50 mx-auto px-10 px-md-0 py-10">
						<div class="mb-10">
							<a class="d-inline-block d-lg-none mb-10 d-flex justify-content-center" href="/">
								<h1 class="ls-tight fw-bolder mylogo">KonektorX</h1>
							</a>
							<h1 class="ls-tight fw-bolder h3">Get started. It&#39;s free</h1>
							<div class="mt-3 text-sm text-muted">
								<span>Already have an account?</span>
								<a
									href="/login"
									class="fw-semibold"
								>Sign in</a> to your account.
							</div>
						</div>
						<form action="/register" method="post" class="needs-validation">
							<div class="row g-5">
								<div class="col-sm-6">
									<label class="form-label" for="first_name">First name</label>
									<input
										name="name"
										id="name"
										type="text"
										class="form-control"
										required
									/>
									<div class="invalid-feedback">
										Please enter first name.
									</div>
								</div>
								<div class="col-sm-6">
									<label class="form-label" for="last_name">Last name</label>
									<input
										name="last_name"
										id="last_name"
										type="text"
										class="form-control"
										required
									/>
									<div class="invalid-feedback">
										Please enter last name.
									</div>
								</div>
								<div class="col-sm-12">
									<label class="form-label">Email address</label>
									<input
										name="email"
										id="email"
										type="email"
										class="form-control"
										required
										autocomplete="off"
									/>
									<div class="invalid-feedback">
										Please enter email.
									</div>
								</div>
								<div class="col-sm-12">
									<label class="form-label">Password</label>
									<input
										id="password"
										name="password"
										type="password"
										class="form-control"
										required
										min="8"
										onkeyup="validatePassword()"
										autocomplete="off"
									/>
									<div id="PasswordMessage" class="invalid-feedback">
										Please enter password.
									</div>
								</div>
								<div class="col-sm-12">
									<label class="form-label">Confirmation Password</label>
									<input
										id="ConfirmationPassword"
										name="ConfirmationPassword"
										type="password"
										class="form-control"
										required
										min="8"
										oninput="validateConfirmationPassword()"
									/>
									<div id="confirmMessage" class="invalid-feedback">
										Please enter confirmation password.
									</div>
								</div>
								<div id="lengthMessage" class="invalid-feedback">
									Please Enter Password.
								</div>
								<div class="col-sm-12"><input type="submit" class="btn btn-dark w-100" value="Sign up "/></div>
								if BadRequest != 0 {
									<div class="d-flex justify-content-center" style="color:#f36">
										Something went wrong, please try again later
									</div>
								}
								if verr != nil {
									for _ , e := range verr {
										if e.Field() == "Password" {
											<div class="d-flex justify-content-center" style="color:#f36">
												Invalid password. Password length must be 8 characters or more.
											</div>
										}
										if e.Field() == "Confirmation" {
											<div class="d-flex justify-content-center" style="color:#f36">
												Invalid confirmation password
											</div>
										}
										if e.Field() == "Email" {
											<div class="d-flex justify-content-center" style="color:#f36">
												Invalid email
											</div>
										}
									}
								}
								if err != nil {
									<div class="d-flex justify-content-center" style="color:#f36">
										{ err.Error() }
									</div>
								}
							</div>
						</form>
						// <div class="py-5 text-center"><span class="text-xs text-uppercase fw-semibold">or</span></div>
						// <div class="row g-2">
						// 	<div class="col-sm-6">
						// 		<a href="#" class="btn btn-neutral w-100">
						// 			<span class="icon icon-sm pe-2">
						// 				<img
						// 					src="./assets/img/social/github.svg"
						// 					alt="..."
						// 				/>
						// 			</span>Github
						// 		</a>
						// 	</div>
						// 	<div class="col-sm-6">
						// 		<a href="#" class="btn btn-neutral w-100">
						// 			<span class="icon icon-sm pe-2">
						// 				<img
						// 					src="./assets/img/social/google.svg"
						// 					alt="..."
						// 				/>
						// 			</span>Google
						// 		</a>
						// 	</div>
						// </div>
					</div>
				</div>
			</div>
			<script src="./assets/js/main.js"></script>
			<script>
            // Example starter JavaScript for disabling form submissions if there are invalid fields
(function () {
  'use strict'

  // Fetch all the forms we want to apply custom Bootstrap validation styles to
  var forms = document.querySelectorAll('.needs-validation')

  // Loop over them and prevent submission
  Array.prototype.slice.call(forms)
    .forEach(function (form) {
      form.addEventListener('submit', function (event) {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
        }
       if( !submitConfirmationPassword()){
          event.preventDefault()
          event.stopPropagation()
       }

        form.classList.add('was-validated')
      }, false)
    })
    //   // Add event listener to password field for validation
    //     var passwordField = document.getElementById("password");
    //     passwordField.addEventListener("onchange", validatePassword);
})()

            // Function to validate confirmation password when leaving password field
    function validateConfirmationPassword() {
        console.log("validateConfirmationPassword");
        var password = document.getElementById("password").value;
        var confirm_password = document.getElementById("ConfirmationPassword");
        var message = document.getElementById("confirmMessage");


         if (confirm_password.value.length < 8) {
            confirm_password.classList.add("is-invalid");
            message.style.display = "block";
        } else {
             confirm_password.classList.remove("is-invalid");
            message.style.display = "none";
        }
        if (password !== confirm_password.value) {
            confirm_password.classList.add("is-invalid");
            message.style.display = "block";
        } else {
            confirm_password.classList.remove("is-invalid");
            message.style.display = "none";
        }
       
  
        var result=password.value !== "" && password.value === confirm_password.value;
        return result;
    }
    

    function validatePassword() {
    console.log("validatePassword");
    var password = document.getElementById("password");
    var confirm_password = document.getElementById("ConfirmationPassword");
    var message = document.getElementById("confirmMessage");
    var passwordMessage = document.getElementById("PasswordMessage");
    
    // Check if password and confirmation password match
    if (confirm_password.value !== "" && password.value !== confirm_password.value) {
        confirm_password.classList.add("is-invalid");
        message.innerText = "Passwords do not match.";
        message.style.display = "block";
    } else {
        confirm_password.classList.remove("is-invalid");
        message.style.display = "none";
    }
    
    // Check if password is at least 8 characters long
    if (password.value.length < 8) {
        password.classList.add("is-invalid");
        passwordMessage.innerText = "Password must be at least 8 characters long.";
        passwordMessage.style.display = "block";
    } else {
        password.classList.remove("is-invalid");
        passwordMessage.style.display = "none";
    }
}
     function submitConfirmationPassword() {
        console.log("validateConfirmationPassword");
        var password = document.getElementById("password");
        var confirm_password = document.getElementById("ConfirmationPassword");
         if(password.value.length >= 8) {
            if(password.value === confirm_password.value){
                return true;
            }else {
                return false;
            }
        }

     }
</script>
		</body>
	</html>
}
