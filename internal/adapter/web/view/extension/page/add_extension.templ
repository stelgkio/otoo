package views

templ AddExtensionForm() {
	<!DOCTYPE html>
	<html lang="en" data-theme="light">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover"/>
			<meta name="color-scheme" content="dark light"/>
			<title>KonektorX: Streamline Your E-commerce Data Integration Effortlessly</title>
			<link rel="preload" href="/assets/css/DAGGERSQUARE.otf" as="font" type="font/otf" crossorigin/>
			<link rel="stylesheet" type="text/css" href="/assets/css/main.css"/>
			<link rel="stylesheet" type="text/css" href="/assets/css/utility.css"/>
			<link rel="stylesheet" type="text/css" href="/assets/css/form.css"/>
			<!-- External styles (these will be loaded async as they are less critical) -->
			<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css" media="print" onload="this.media='all'"/>
			<noscript><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css"/></noscript>
			<link rel="stylesheet" href="https://api.fontshare.com/v2/css?f=satoshi@900,700,500,300,401,400&display=swap" media="print" onload="this.media='all'"/>
			<noscript><link rel="stylesheet" href="https://api.fontshare.com/v2/css?f=satoshi@900,700,500,300,401,400&display=swap"/></noscript>
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" media="print" onload="this.media='all'"/>
			<noscript><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"/></noscript>
			<!-- Favicon -->
			<link rel="icon" type="image/png" href="/assets/img/favicon1.png"/>
			<!-- Defer JS Scripts to improve initial load performance -->
			<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
			<script src="https://js.stripe.com/v3/"></script>
			<script src="https://unpkg.com/i18next@21.8.14/i18next.min.js"></script>
			<script src="https://unpkg.com/i18next-http-backend@1.5.19/i18nextHttpBackend.min.js"></script>
			<script src="https://unpkg.com/i18next-browser-languagedetector@6.1.4/i18nextBrowserLanguageDetector.min.js"></script>
			//<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
			<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/css/select2.min.css" rel="stylesheet"/>
			<style>
        /* Style Select2 dropdown */
        .select2-container--default .select2-selection--single {
            background-color: #fff;  /* White background for the select field */
            border: 1px solid #ced4da;  /* Bootstrap border style */
        }
        /* Style the search input inside the Select2 dropdown */
        .select2-container--default .select2-search--dropdown .select2-search__field {
            background-color: #fff;  /* White background for input */
            color: #000;  /* Black text for input */
        }
    </style>
		</head>
		<body>
			<div class="row g-0 justify-content-center gradient-bottom-right start-purple middle-indigo end-pink">
				<div class="col-12 col-md-12 col-lg-12 d-flex  justify-content-center bg-body ">
					<div class="w-md-50 mx-auto px-10 px-md-0 py-10">
						<div class="mb-10">
							<a class="d-inline-block mb-10 d-flex justify-content-center" href="/">
								<h1 class="ls-tight fw-bolder mylogo">KonektorX</h1>
							</a>
							<h1 class="ls-tight fw-bolder h3">Add manualy extension to existing project</h1>
						</div>
						<form>
							<div class="row g-5">
								<div class=" mt-5">
									<label for="exampleSelect" class="form-label">Select Project Search </label>
									<!-- Select2 field -->
									<select
										class="form-select"
										name="make"
										id="exampleSelect"
										style="width: 100%;"
										hx-get="/projectextension"
										hx-target="#projectextension"
										hx-trigger="select2-change"
									>
										<!-- Options will be dynamically loaded via JavaScript (mock data) -->
									</select>
								</div>
								<div id="projectextension">
									<div class="col-sm-12">
										<label class="form-label" for="last_name"></label>
										<select class="form-select" aria-label="Default select example" name="make" hx-get="/projectextension" hx-target="#projectextension">
											<option selected>Available extension</option>
											<option value="30">One Month</option>
											<option value="60">Two Month</option>
											<option value="90">Three Month</option>
											<option value="356">One Year</option>
										</select>
									</div>
									<div class="col-sm-12 pb-5">
										<label class="form-label" for="last_name"></label>
										<select class="form-select" aria-label="Default select example">
											<option selected>Extension period</option>
											<option value="30">One Month</option>
											<option value="60">Two Month</option>
											<option value="90">Three Month</option>
											<option value="356">One Year</option>
										</select>
									</div>
									<div class="col-sm-12 ">
										<input type="submit" class="btn btn-dark w-100 " value="Add extension "/>
										<table class="table">
											<thead>
												<tr>
													<th scope="col">Extension </th>
													<th scope="col">Expires </th>
													<th scope="col">Action </th>
												</tr>
											</thead>
											<tbody>
												<tr>
													<th scope="row">1</th>
													<th scope="row">10</th>
													<th scope="row">
														<button
															data-bs-target="#deleteAccountModal"
															data-bs-toggle="modal"
															class="btn btn-sm btn-danger"
														>Delete </button>
													</th>
												</tr>
												<tr>
													<th scope="row">2</th>
													<th scope="row">20</th>
													<th scope="row">
														<button
															data-bs-target="#deleteAccountModal"
															data-bs-toggle="modal"
															class="btn btn-sm btn-danger"
														>Delete </button>
													</th>
												</tr>
												<tr>
													<th scope="row">3</th>
													<th scope="row">30</th>
													<th scope="row">
														<button
															data-bs-target="#deleteAccountModal"
															data-bs-toggle="modal"
															class="btn btn-sm btn-danger"
														>Delete </button>
													</th>
												</tr>
											</tbody>
										</table>
									</div>
								</div>
							</div>
						</form>
						//	<div class="py-5 text-center"><span class="text-xs text-uppercase fw-semibold">or</span></div>
					</div>
				</div>
			</div>
			<!-- Bootstrap 5 JS -->
			<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
			<!-- jQuery (required for Select2) -->
			<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
			<!-- Select2 JS -->
			<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/js/select2.min.js"></script>
			<!-- Initialize Select2 with Ajax search -->
			// 		<script>
			//     $(document).ready(function() {
			//         $('#exampleSelect').select2({
			//             placeholder: 'Search for an option...',
			//             ajax: {
			//                 url: '/search-options',  // Replace with your search endpoint
			//                 dataType: 'json',
			//                 delay: 250,  // Delay in ms for better performance
			//                 data: function(params) {
			//                     return {
			//                         q: params.term // Search term sent to the server
			//                     };
			//                 },
			//                 processResults: function (data) {
			//                     // Map the data into the format Select2 expects
			//                     return {
			//                         results: $.map(data, function (item) {
			//                             return {
			//                                 id: item.id,  // The id of the option
			//                                 text: item.text  // The display text of the option
			//                             };
			//                         })
			//                     };
			//                 },
			//                 cache: true  // Cache the results to avoid repeated requests
			//             },
			//             minimumInputLength: 2,  // Minimum characters before search triggers
			//             width: '100%'  // Ensure the select2 dropdown covers the full width
			//         });
			//     });
			// </script>
			<script>
        // Mock data array simulating options from a server
        var mockData = [
            { id: 1, text: "Apple" },
            { id: 2, text: "Banana" },
            { id: 3, text: "Cherry" },
            { id: 4, text: "Date" },
            { id: 5, text: "Elderberry" },
            { id: 6, text: "Fig" },
            { id: 7, text: "Grape" },
            { id: 8, text: "Honeydew" },
            { id: 9, text: "Kiwi" },
            { id: 10, text: "Lemon" },
            { id: 11, text: "Mango" },
            { id: 12, text: "Nectarine" },
            { id: 13, text: "Orange" },
            { id: 14, text: "Papaya" },
            { id: 15, text: "Quince" },
            { id: 16, text: "Raspberry" },
            { id: 17, text: "Strawberry" },
            { id: 18, text: "Tomato" },
            { id: 19, text: "Ugli fruit" },
            { id: 20, text: "Watermelon" }
        ];

        // Initialize Select2 with Ajax-like search but using mock data
        $(document).ready(function() {
            $('#exampleSelect').select2({
                placeholder: 'Search for a fruit...',
                ajax: {
                    transport: function (params, success, failure) {
                        // Simulate an asynchronous data fetch (mocking an AJAX call)
                        setTimeout(function() {
                            var results = mockData.filter(function(item) {
                                return item.text.includes(params.data.term);
                            });
                            success({
                                results: results
                            });
                        }, 250); // Simulate a 250ms delay to mimic server response time
                    },
                    delay: 250,  // Delay the search to avoid instant requests (good practice)
                    minimumInputLength: 1,  // Minimum characters before triggering search
                    processResults: function (data) {
                        // Process the mock data and return in the format Select2 expects
                        return {
                            results: data.results
                        };
                    }
                },
                // Custom template for displaying the value and text
                templateResult: function (data) {
                    if (!data.id) { return data.text; }  // If there's no ID, just return the text

                    // Show the format "Value: Text"
                    return $('<span >Value: ' + data.id + ' - ' + data.text + '</span>');
                },
                // Custom template for showing the selected option in the input
                templateSelection: function (data) {
                    return 'Value: ' + data.id + ' - ' + data.text;
                }
            });
        }).on('select2:select', function (e) {
        // Trigger the custom event for HTMX
        var selectElement = document.getElementById('exampleSelect');
        var customEvent = new CustomEvent('select2-change');  // Custom event
        selectElement.dispatchEvent(customEvent);  // Dispatch the event
    });
    </script>
		</body>
	</html>
}
